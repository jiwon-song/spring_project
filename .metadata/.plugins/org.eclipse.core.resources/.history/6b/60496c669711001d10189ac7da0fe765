<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="visual">
<!--채용상위 3개부서의 년도별 채용인원수 -->
<select id="top3_year" resultType='hashmap'>
<![CDATA[
select department_id, department_name,
        sum (decode(unit, 2001, count, 0)) y2001,
        sum (decode(unit, 2002, count, 0)) y2002,
        sum (decode(unit, 2003, count, 0)) y2003,
        sum (decode(unit, 2004, count, 0)) y2004,
        sum (decode(unit, 2005, count, 0)) y2005,
        sum (decode(unit, 2006, count, 0)) y2006,
        sum (decode(unit, 2007, count, 0)) y2007,
        sum (decode(unit, 2008, count, 0)) y2008,
        sum (decode(unit, 2009, count, 0)) y2009,
        sum (decode(unit, 2010, count, 0)) y2010
from ( select department_id, to_char(hire_date, 'yyyy') unit, count(*) count
        from employees
        where department_id in ( select department_id
                                from (select dense_rank() over(order by count(*) desc ) rank, department_id, count(*)
                                      from employees
                                      group by department_id order by 1) e
                                where rank <=3  )
        group by department_id, to_char(hire_date, 'yyyy')) e inner join departments d
        using (department_id)
group by department_id, department_name
]]>
</select>


<!--채용상위 3개부서의 월별 채용인원수 -->
<select id="top3_month" resultType='hashmap'>
<![CDATA[
select department_id, department_name, 
       sum(decode(unit, '01', count, 0)) m01,
       sum(decode(unit, '02', count, 0)) m02,
       sum(decode(unit, '03', count, 0)) m03,
       sum(decode(unit, '04', count, 0)) m04,
       sum(decode(unit, '05', count, 0)) m05,
       sum(decode(unit, '06', count, 0)) m06,
       sum(decode(unit, '07', count, 0)) m07,
       sum(decode(unit, '08', count, 0)) m08,
       sum(decode(unit, '09', count, 0)) m09,
       sum(decode(unit, '10', count, 0)) m10,
       sum(decode(unit, '11', count, 0)) m11,
       sum(decode(unit, '12', count, 0)) m12
from (select department_id, to_char(hire_date,'mm') unit, count(*) count
      from employees
      where department_id in (select department_id 
                              from (select dense_rank() over(order by count(*) desc) rank, department_id
                                    from employees
                                    group by department_id) e
                              where rank <= 3 )
      group by department_id, to_char(hire_date,'mm') ) e inner join departments d
      using(department_id)
group by department_id, department_name
]]> 
</select>

<!-- 년도별 채용인원수 -->
<select id='hirement_year' resultType='hashmap'>
select to_char(hire_date, 'yyyy') unit, count(*) count
from employees
group by to_char(hire_date, 'yyyy')
order by 1
</select>

<!-- 월별 채용인원수 -->
<select id='hirement_month' resultType='hashmap'>
select to_char(hire_date, 'mm') unit, count(*) count
from employees
group by to_char(hire_date, 'mm')
order by 1
</select>


<!-- 부서별 사원수 조회 -->
<select id="department" resultType='hashmap'>
select e.department_id, nvl(department_name,'기타') department_name, count(*) count
from employees e left outer join departments d 
on e.department_id = d.department_id
group by  e.department_id, department_name
order by 1
</select>

</mapper>