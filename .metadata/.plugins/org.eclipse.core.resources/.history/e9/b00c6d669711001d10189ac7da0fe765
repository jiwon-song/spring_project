<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice.mapper">

<!-- 답글신규저장 -->
<insert id = "reply_insert">
<!-- 명령문 2개 실행할 때 -->
<![CDATA[
{
call declare begin  	

update notice set step=step+1
where root = #{root} and step > #{step};

insert into notice (id, root, title, content, writer, filename, filepath, step, indent)
values ( seq_notice.nextval, #{root}, #{title}, #{content}, #{writer}
		, #{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR}
		, #{step}+1, #{indent}+1);
end		
}		
]]>	
</insert>


<sql id='search_where'>
<if test='search=="title" or search=="content"'>
where ${search} like '%'|| #{keyword} || '%'
</if>
<if test='search=="writer"'>
where writer in  (select id 
                 from member 
                 where name like '%' || #{keyword} || '%')
</if>
<if test='search=="all"'>
where title like '%' || #{keyword} || '%'
or content like '%' || #{keyword} || '%'
or writer in  (select id 
                 from member 
                 where name like '%' || #{keyword} || '%')
</if>
</sql>

<!-- 총 공지글목록 갯수 조회 -->
<select id='total' resultType='integer'>
select count(*) 
from notice
<include refid="search_where"/>

</select>

<!-- 공지글목록 조회 -->
<select id="list" resultType="notice.NoticeVO">
<!-- 현재페이지글조회 -->
select * 
from (select rownum no, n.* 
	  from (select n.*, name  
	  	    from notice n inner join member m on m.id=n.writer
	 	    <include refid="search_where"/>
		    order by root, step desc) n 
	  order by no desc) n
where no between #{beginList} and #{endList}
<!--
전체글조회  
select rownum no, n.*, name 
from (select * from notice order by id) n inner join member m on m.id=n.writer
order by no desc
-->
<!--  
select rownum no, n.*, (select name from member m where m.id=n.writer) name 
from (select * from notice order by id) n
order by no desc
-->
</select>

<!-- 공지글 변경저장처리 -->
<update id='update'>
update notice set title=#{title}, content=#{content}
				, filename=#{filename, jdbcType=VARCHAR}
				, filepath=#{filepath, jdbcType=VARCHAR}
where id=#{id}				
</update>

<!-- 공지글 삭제처리 -->
<delete id='delete'>
delete from notice where id = #{id}
</delete>

<!-- 공지글 조회수 증가처리 -->
<update id="read">
update notice set readcnt = readcnt + 1 
where id = #{id}
</update>

<!-- 공지글상세조회 -->
<select id='detail' resultType="notice.NoticeVO">
select n.*, name 
from notice n inner join member m on n.writer=m.id
where n.id = #{id}
</select>

<!-- 신규공지글 저장 -->
<insert id="insert">
insert into notice (id, root, title, content, writer, filename, filepath)
values (seq_notice.nextval, seq_notice.currval, #{title}, #{content}, #{writer}
		, #{filename, jdbcType=VARCHAR}
		, #{filepath, jdbcType=VARCHAR})
</insert>

</mapper>