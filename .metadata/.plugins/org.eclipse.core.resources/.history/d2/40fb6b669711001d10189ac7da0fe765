<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board.mapper">

<!-- 공지글댓글삭제 -->
<delete id="comment_delete">
delete from board_comment where id = #{id}
</delete>

<!-- 공지글댓글변경저장 -->
<update id='comment_update'>
update board_comment set content=#{content}
where id=#{id}
</update>

<!-- 공지글댓글목록 조회 -->
<select id='comment_list' resultType='board.BoardCommentVO'>
select c.*, name 
from board_comment c inner join member m on c.writer = m.id  
where board_id=#{board_id}
order by c.id desc
</select>

<!-- 공지글댓글 저장처리 -->
<insert id="comment_insert">
insert into board_comment(board_id, content, writer)
values (#{board_id}, #{content}, #{writer})
</insert>

<!-- 공지글 삭제 처리 -->
<delete id='delete'>
delete from board where id=#{id}
</delete>

<!-- 공지글 변경저장 처리 -->
<update id="modify">
update board set title=#{title}, content=#{content}
			, filename=#{filename, jdbcType=VARCHAR}
			, filepath=#{filepath, jdbcType=VARCHAR}
where id=#{id}			
</update>

<!-- 해당 공지글 조회수 증가처리 -->
<update id="update">
update board set readcnt = readcnt + 1
where id=#{id}
</update>

<!-- 해당 공지글 상세조회 -->
<select id='detail'  resultType="board.BoardVO">
select b.*, name  
from board b inner join member m on b.writer=m.id 
where b.id = #{id}
</select>

<!-- 방명록 페이지에 해당하는 글 목록조회 -->
<select id='list' resultType="board.BoardVO">
select *  
from (select row_number() over(order by b.id) no, b.*, name 
      from board b inner join member m on b.writer=m.id
      <include refid="search_where"/>
      order by no desc) b
where no between #{beginList} and #{endList}
<!--  
select rownum no, b.* 
from (select b.*, name 
      from board b inner join member m on b.writer=m.id
      order by b.id) b
order by no desc 
-->
</select>

<!-- 검색조건 -->
<sql id='search_where'>
<choose>
	<when test="search == 'title' or search == 'content' ">
		where ${search} like '%'|| #{keyword} || '%'
	</when>
	<when test="search == 'title_content' ">
		where title like '%'|| #{keyword} || '%'
		or content like '%'|| #{keyword} || '%'
	</when>
	<when test="search == 'all' ">
		where title like '%'|| #{keyword} || '%'
		or content like '%'|| #{keyword} || '%'
		or <include refid="writer"/>
	</when>
	<when test="search == 'writer' ">
		where <include refid="writer"/>
	</when>
</choose>
</sql>

<sql id='writer'>
writer in (select id from member 
	       where name like '%'|| #{keyword} || '%')
</sql>

<!-- 방명록 총글의 건수 -->
<select id='total' resultType='integer'>
select count(*) from board <include refid="search_where"/>
</select>

<!-- 방명록 글 신규저장 -->
<insert id="insert">
insert into board(title, content, writer, filename, filepath)
values (#{title}, #{content}, #{writer}
		, #{filename, jdbcType=VARCHAR}
		, #{filepath, jdbcType=VARCHAR})
</insert>
</mapper>